{
    "docs": [
        {
            "location": "/", 
            "text": "Open311 API Documentation\n\n\nAuthentication\n\n\nYou may need an API Key in order to call some endpoints in Chicago's Open311 system. This is indicated in the documentation by a field labeled \n\"Requires API Key?\"\n.\n\n\nTesting\n\n\nThe City of Chicago has a separate environment and URL for testing developer applications before connecting them to the Live Open311 system. The API key developers use in Test will be different than the one used in production. The standard developer workflow would work like this:\n\n\n\n\nDeveloper requests an API key from the Test Open311 system\n\n\nUsing the Test API key, developer codes and tests their app against the Test environment\n\n\nDeveloper requests an API key from the Live Open311 system\n\n\nDeveloper's application is deployed/released using Live system API key and is coded against the Live environment\n\n\n\n\nRequesting an API key\n\n\nTest\n\n\nhttp://test311api.cityofchicago.org/open311/v2/apps/new\n\n\nVisit the above URL to request an API key from the test Open311 system. Your request will be automatically provisioned so you can get started immediately developing against the test Open311 system.\n\n\nProduction\n\n\nhttp://311api.cityofchicago.org/open311/v2/apps/new\n\n\nisit the above URL to request an API key from the test Open311 system. The API Key application you submit will need to be reviewed and approved by City of Chicago Staff to ensure compliance with the \nTerms of Service\n.\n\n\nService Request Meta Data\n\n\nMethods that expose data related to how Service Requests will be exposed in the API.\n\n\n\n\n\n\n\n\nMethod\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nGET services.:format\n\n\nService List\n: Provide a list of acceptable 311 service request types and their associated service codes.\n\n\n\n\n\n\nGET services/:service_code.:format\n\n\nService Definition\n: Define attributes associated with a service code.\n\n\n\n\n\n\n\n\nService Request\n\n\nMethods that allow for reading and writing of Service Requests to the City database.\n\n\n\n\n\n\n\n\nMethod\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nGET requests/:service_request_i d.:format\n\n\nService Request\n: Query the current status of an individual request.\n\n\n\n\n\n\nGET requests.:format\n\n\nService Requests\n: Query the current status of multiple requests. Because the Chicago endpoint may return service requests with no token and no service_reqeust_id in calls to GET service_requests while recently submitted SRs are still being processed by City systems, users of the GET service_requests method should ignore any service requests returned by the API until they have a service_request_id.\n\n\n\n\n\n\nPOST requests.:format\n\n\nPost Service Request\n: Create a service request in the City's database. Once a service request has been processed by the City (this can take an undetermined amount of time), you should be able to call the GET service_request_id method (tokens/:token_id.:format) to get back the service_request_id for a SR. Therefore, it is nesseary to poll the GET service_request_id method until an SR id is returned. Because the Chicago endpoint may return service requests with no token and no service_reqeust_id in calls to GET service_requests while recently submitted SRs are still being processed by City systems, users of the GET service_requests method should ignore any service requests returned by the API until they have a service_request_id.", 
            "title": "Home"
        }, 
        {
            "location": "/#open311-api-documentation", 
            "text": "", 
            "title": "Open311 API Documentation"
        }, 
        {
            "location": "/#authentication", 
            "text": "You may need an API Key in order to call some endpoints in Chicago's Open311 system. This is indicated in the documentation by a field labeled  \"Requires API Key?\" .", 
            "title": "Authentication"
        }, 
        {
            "location": "/#testing", 
            "text": "The City of Chicago has a separate environment and URL for testing developer applications before connecting them to the Live Open311 system. The API key developers use in Test will be different than the one used in production. The standard developer workflow would work like this:   Developer requests an API key from the Test Open311 system  Using the Test API key, developer codes and tests their app against the Test environment  Developer requests an API key from the Live Open311 system  Developer's application is deployed/released using Live system API key and is coded against the Live environment", 
            "title": "Testing"
        }, 
        {
            "location": "/#requesting-an-api-key", 
            "text": "", 
            "title": "Requesting an API key"
        }, 
        {
            "location": "/#test", 
            "text": "http://test311api.cityofchicago.org/open311/v2/apps/new  Visit the above URL to request an API key from the test Open311 system. Your request will be automatically provisioned so you can get started immediately developing against the test Open311 system.", 
            "title": "Test"
        }, 
        {
            "location": "/#production", 
            "text": "http://311api.cityofchicago.org/open311/v2/apps/new  isit the above URL to request an API key from the test Open311 system. The API Key application you submit will need to be reviewed and approved by City of Chicago Staff to ensure compliance with the  Terms of Service .", 
            "title": "Production"
        }, 
        {
            "location": "/#service-request-meta-data", 
            "text": "Methods that expose data related to how Service Requests will be exposed in the API.     Method  Description      GET services.:format  Service List : Provide a list of acceptable 311 service request types and their associated service codes.    GET services/:service_code.:format  Service Definition : Define attributes associated with a service code.", 
            "title": "Service Request Meta Data"
        }, 
        {
            "location": "/#service-request", 
            "text": "Methods that allow for reading and writing of Service Requests to the City database.     Method  Description      GET requests/:service_request_i d.:format  Service Request : Query the current status of an individual request.    GET requests.:format  Service Requests : Query the current status of multiple requests. Because the Chicago endpoint may return service requests with no token and no service_reqeust_id in calls to GET service_requests while recently submitted SRs are still being processed by City systems, users of the GET service_requests method should ignore any service requests returned by the API until they have a service_request_id.    POST requests.:format  Post Service Request : Create a service request in the City's database. Once a service request has been processed by the City (this can take an undetermined amount of time), you should be able to call the GET service_request_id method (tokens/:token_id.:format) to get back the service_request_id for a SR. Therefore, it is nesseary to poll the GET service_request_id method until an SR id is returned. Because the Chicago endpoint may return service requests with no token and no service_reqeust_id in calls to GET service_requests while recently submitted SRs are still being processed by City systems, users of the GET service_requests method should ignore any service requests returned by the API until they have a service_request_id.", 
            "title": "Service Request"
        }, 
        {
            "location": "/service_list/", 
            "text": "GET services.:format\n\n\nProvide a list of acceptable 311 service request types and their associated service codes.\n\n\n\n\n\n\n\n\nResource Information\n\n\n\n\n\n\n\n\n\n\n\n\nMethod Name\n\n\nService List\n\n\n\n\n\n\nRequires API key?\n\n\nNo\n\n\n\n\n\n\nResponse Formats\n\n\nJSON, XML\n\n\n\n\n\n\nHTTP Methods\n\n\nGET\n\n\n\n\n\n\nJSONP\n\n\ncallback=?\n\n\n\n\n\n\n\n\nArguments\n\n\n\n\n\n\n\n\nArgument\n\n\nRequired\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\njurisdiction_id\n\n\noptional\n\n\nThis is currently optional on Chicago's Open311 endpoint.\n\n\n\n\n\n\n\n\nResponse Parameters\n\n\n\n\n\n\n\n\nArgument\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nservice_code\n\n\nThe unique identifier for the service request type.\n\n\n\n\n\n\nservice_name\n\n\nThe human readable name of the service request type.\n\n\n\n\n\n\ndescription\n\n\nA brief description of the service request type.\n\n\n\n\n\n\nmetadata\n\n\nDetermines whether there are additional form fields for this service type.\n\n\n\n\n\n\ntype\n\n\nExplains how this deals with the Open311 service request ID dance.\n\n\n\n\n\n\nkeywords\n\n\nA comma separated list of tags or keywords to help users identify the request type. This can provide synonyms of the service_name and group.\n\n\n\n\n\n\ngroup\n\n\nA category to group this service type within. This provides a way to group several service request types under one category such as 'sanitation'.", 
            "title": "service_list"
        }, 
        {
            "location": "/service_list/#get-servicesformat", 
            "text": "Provide a list of acceptable 311 service request types and their associated service codes.     Resource Information       Method Name  Service List    Requires API key?  No    Response Formats  JSON, XML    HTTP Methods  GET    JSONP  callback=?", 
            "title": "GET services.:format"
        }, 
        {
            "location": "/service_list/#arguments", 
            "text": "Argument  Required  Description      jurisdiction_id  optional  This is currently optional on Chicago's Open311 endpoint.", 
            "title": "Arguments"
        }, 
        {
            "location": "/service_list/#response-parameters", 
            "text": "Argument  Description      service_code  The unique identifier for the service request type.    service_name  The human readable name of the service request type.    description  A brief description of the service request type.    metadata  Determines whether there are additional form fields for this service type.    type  Explains how this deals with the Open311 service request ID dance.    keywords  A comma separated list of tags or keywords to help users identify the request type. This can provide synonyms of the service_name and group.    group  A category to group this service type within. This provides a way to group several service request types under one category such as 'sanitation'.", 
            "title": "Response Parameters"
        }, 
        {
            "location": "/service_definition/", 
            "text": "GET services/:service_code.:format\n\n\nDefine attributes associated with a service code.\n\n\n\n\n\n\n\n\nResource Information\n\n\n\n\n\n\n\n\n\n\n\n\nMethod Name\n\n\nService Definition\n\n\n\n\n\n\nRequires API key?\n\n\nNo\n\n\n\n\n\n\nResponse Formats\n\n\nJSON, XML\n\n\n\n\n\n\nHTTP Methods\n\n\nGET\n\n\n\n\n\n\nJSONP\n\n\ncallback=?\n\n\n\n\n\n\n\n\nArguments\n\n\n\n\n\n\n\n\nArgument\n\n\nRequired\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\njurisdiction_id\n\n\noptional\n\n\nThis is currently optional on Chicago's Open311 endpoint.\n\n\n\n\n\n\nservice_code\n\n\nrequired\n\n\nThe service_code is specified in the main URL path rather than an added query string parameter.\n\n\n\n\n\n\n\n\nResponse Parameters\n\n\n\n\n\n\n\n\nArgument\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nservice_code\n\n\nReturns the service_code associated with the definition, the same one submitted for this call.\n\n\n\n\n\n\nvariable\n\n\n'true' denotes that user input is needed. 'false' means the attribute is only used to present information to the user within the description field.\n\n\n\n\n\n\ncode\n\n\nA unique identifier for the attribute.\n\n\n\n\n\n\ndatatype\n\n\nDenotes the type of field used for user input.\n\n\n\n\n\n\nrequired\n\n\n'true' means that the value is required to submit service request. 'false' means that the value not required.\n\n\n\n\n\n\ndatatype_description\n\n\nA description of the datatype which helps the user provide their input.\n\n\n\n\n\n\norder\n\n\nThe sort order that the attributes will be presented to the user. 1 is shown first in the list.\n\n\n\n\n\n\ndescription\n\n\nA description of the attribute field with instructions for the user to find and identify the requested information.\n\n\n\n\n\n\nkey\n\n\nThe unique identifier associated with an option for singlevaluelist or multivaluelist. This is analogous to the value attribute in an html option tag.\n\n\n\n\n\n\nname\n\n\nThe human readable title of an option for singlevaluelist or multivaluelist. This is analogous to the innerhtml text node of an html option tag.", 
            "title": "service_definition"
        }, 
        {
            "location": "/service_definition/#get-servicesservice_codeformat", 
            "text": "Define attributes associated with a service code.     Resource Information       Method Name  Service Definition    Requires API key?  No    Response Formats  JSON, XML    HTTP Methods  GET    JSONP  callback=?", 
            "title": "GET services/:service_code.:format"
        }, 
        {
            "location": "/service_definition/#arguments", 
            "text": "Argument  Required  Description      jurisdiction_id  optional  This is currently optional on Chicago's Open311 endpoint.    service_code  required  The service_code is specified in the main URL path rather than an added query string parameter.", 
            "title": "Arguments"
        }, 
        {
            "location": "/service_definition/#response-parameters", 
            "text": "Argument  Description      service_code  Returns the service_code associated with the definition, the same one submitted for this call.    variable  'true' denotes that user input is needed. 'false' means the attribute is only used to present information to the user within the description field.    code  A unique identifier for the attribute.    datatype  Denotes the type of field used for user input.    required  'true' means that the value is required to submit service request. 'false' means that the value not required.    datatype_description  A description of the datatype which helps the user provide their input.    order  The sort order that the attributes will be presented to the user. 1 is shown first in the list.    description  A description of the attribute field with instructions for the user to find and identify the requested information.    key  The unique identifier associated with an option for singlevaluelist or multivaluelist. This is analogous to the value attribute in an html option tag.    name  The human readable title of an option for singlevaluelist or multivaluelist. This is analogous to the innerhtml text node of an html option tag.", 
            "title": "Response Parameters"
        }, 
        {
            "location": "/service_request/", 
            "text": "GET services/:service_code.:format\n\n\nDefine attributes associated with a service code.\n\n\n\n\n\n\n\n\nResource Information\n\n\n\n\n\n\n\n\n\n\n\n\nMethod Name\n\n\nService Definition\n\n\n\n\n\n\nRequires API key?\n\n\nNo\n\n\n\n\n\n\nResponse Formats\n\n\nJSON, XML\n\n\n\n\n\n\nHTTP Methods\n\n\nGET\n\n\n\n\n\n\nJSONP\n\n\ncallback=?\n\n\n\n\n\n\n\n\nArguments\n\n\n\n\n\n\n\n\nArgument\n\n\nRequired\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\njurisdiction_id\n\n\noptional\n\n\nThis is currently optional on Chicago's Open311 endpoint.\n\n\n\n\n\n\nservice_code\n\n\nrequired\n\n\nThe service_code is specified in the main URL path rather than an added query string parameter.\n\n\n\n\n\n\nextensions\n\n\noptional\n\n\nThe Chicago Open311 endpoint provides supplemental details about Service Requests that are in addition to the ones described in the standard specification. These data are nested in the 'extended_attributes' field in the Service Request response. In order to retrieve the new supplemental details, add the query parameter \u201cextensions=true\u201d to any Open 311 api request.\n\n\n\n\n\n\n\n\nResponse Parameters\n\n\n\n\n\n\n\n\nArgument\n\n\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nservice_request_id\n\n\n\n\nThe unique ID of the service request created.\n\n\n\n\n\n\nservice_code\n\n\n\n\nReturns the service_code associated with the definition, the same one submitted for this call.\n\n\n\n\n\n\nstatus\n\n\nThe current status of the service request.\n\n\n\n\n\n\n\n\nstatus_notes\n\n\n\n\nExplanation of why status was changed to current state or more details on current status than conveyed with status alone.\n\n\n\n\n\n\nservice_name\n\n\n\n\nThe human readable name of the service request type.\n\n\n\n\n\n\nservice_code\n\n\n\n\nThe unique identifier for the service request type.\n\n\n\n\n\n\ndescription\n\n\n\n\nA full description of the request or report submitted.\n\n\n\n\n\n\nagency_responsible\n\n\n\n\nThe agency responsible for fulfilling or otherwise addressing the service request.\n\n\n\n\n\n\nservice_notice\n\n\nInformation about the action expected to fulfill the request or otherwise address the information reported.\n\n\n\n\n\n\n\n\nrequested_datetime\n\n\n\n\nThe date and time when the service request was made.\n\n\n\n\n\n\nupdated_datetime\n\n\nNon-standard\n\n\nTBD: The Chicago implementation uses updated_datetime in a manner that differs from Open311. Documentation is still being compiled.\n\n\n\n\n\n\nexpected_datetime\n\n\n\n\nThe date and time when the service request can be expected to be fulfilled. This may be based on a service-specific service level agreement.\n\n\n\n\n\n\naddress\n\n\n\n\nHuman readable address or description of location.\n\n\n\n\n\n\naddress_id\n\n\n\n\nThe internal address ID used by a jurisdictions master address repository or other addressing system.\n\n\n\n\n\n\nzipcode\n\n\n\n\nThe postal code for the location of the service request.\n\n\n\n\n\n\nlat\n\n\n\n\nlatitude using the (WGS84) projection.\n\n\n\n\n\n\nlong\n\n\n\n\nlongitude using the (WGS84) projection.\n\n\n\n\n\n\nmedia_url\n\n\nNon-standard\n\n\nA URL to media associated with the request, eg an image.\n\n\n\n\n\n\nchannel\n\n\nNon-standard\n\n\nNested in extended_attributes field (extended_attributes.channel). Describes the method that the Service Request was input into the 311 system (i.e. phone, web).\n\n\n\n\n\n\nward\n\n\nNon-standard\n\n\nNested in extended_attributes field (extended_attributes.ward). The political boundary where the Service Request is located.\n\n\n\n\n\n\npolice_district\n\n\nNon-standard\n\n\nNested in extended_attributes field (extended_attributes.police_district). The police district boundary where the Service Request is located.\n\n\n\n\n\n\nduplicate\n\n\nNon-standard\n\n\nNested in extended_attributes field (extended_attributes.duplicate). Indicates that this Service Request is a duplicate of a Service Request that is already in the system. This can happen when, for example, the same pothole is reported multiple times. Use in conjuntion with extended_attributes.parent_service_request_id to identify duplicates and their assoicated 'master' (aka parent) Service Request records.\n\n\n\n\n\n\nparent_service_request_id\n\n\nNon-standard\n\n\nNested in extended_attributes field (extended_attributes.parent_service_request_id). When a Service Request is a duplicate, this value shows which Service Request (the parent) it is a duplicate of. Use in conjuntion with extended_attributes.duplicate to identify duplicates and their assoicated 'master' (aka parent) Service Request records.\n\n\n\n\n\n\nnotes\n\n\nNon-standard\n\n\nThis fields holds nested and related status details, activities, follow-on case details, for the Service Request. Will generally have a Request Opened activity and a Request closed activity when the request is closed. May also hold other activity types (i.e. Dispatch Work Crew) and notes about Follow-on Service Requests (usually transfer of Service Request ownership from one department to another). Each actiivty in the array of 1 or more activities can have additional properties that are described below.\n\n\n\n\n\n\nnotes.summary\n\n\nNon-standard\n\n\nShort description of the activity / action described by the note.\n\n\n\n\n\n\nnotes.type\n\n\nNon-standard\n\n\nCategory of the activity / action described by the note (i.e activity / opened / closed).\n\n\n\n\n\n\nnotes.description\n\n\nNon-standard\n\n\nMore detailed description of the activity / action described by the note - usually comes directly from City systems so can be a bit cryptic.\n\n\n\n\n\n\nnotes.extended_attributes\n\n\nNon-standard\n\n\nFor activities that are actual Follow-on (child) Service Requests, this field holds important information about those child service requests. Specifically, you will find service_name, agency_responsible, and service_request_id of the child SR.\n\n\n\n\n\n\nnotes.datetime\n\n\nNon-standard\n\n\nThe human readable title of an option for singlevaluelist or multivaluelist. This is analogous to the innerhtml text node of an html option tag.", 
            "title": "service_request"
        }, 
        {
            "location": "/service_request/#get-servicesservice_codeformat", 
            "text": "Define attributes associated with a service code.     Resource Information       Method Name  Service Definition    Requires API key?  No    Response Formats  JSON, XML    HTTP Methods  GET    JSONP  callback=?", 
            "title": "GET services/:service_code.:format"
        }, 
        {
            "location": "/service_request/#arguments", 
            "text": "Argument  Required  Description      jurisdiction_id  optional  This is currently optional on Chicago's Open311 endpoint.    service_code  required  The service_code is specified in the main URL path rather than an added query string parameter.    extensions  optional  The Chicago Open311 endpoint provides supplemental details about Service Requests that are in addition to the ones described in the standard specification. These data are nested in the 'extended_attributes' field in the Service Request response. In order to retrieve the new supplemental details, add the query parameter \u201cextensions=true\u201d to any Open 311 api request.", 
            "title": "Arguments"
        }, 
        {
            "location": "/service_request/#response-parameters", 
            "text": "Argument   Description      service_request_id   The unique ID of the service request created.    service_code   Returns the service_code associated with the definition, the same one submitted for this call.    status  The current status of the service request.     status_notes   Explanation of why status was changed to current state or more details on current status than conveyed with status alone.    service_name   The human readable name of the service request type.    service_code   The unique identifier for the service request type.    description   A full description of the request or report submitted.    agency_responsible   The agency responsible for fulfilling or otherwise addressing the service request.    service_notice  Information about the action expected to fulfill the request or otherwise address the information reported.     requested_datetime   The date and time when the service request was made.    updated_datetime  Non-standard  TBD: The Chicago implementation uses updated_datetime in a manner that differs from Open311. Documentation is still being compiled.    expected_datetime   The date and time when the service request can be expected to be fulfilled. This may be based on a service-specific service level agreement.    address   Human readable address or description of location.    address_id   The internal address ID used by a jurisdictions master address repository or other addressing system.    zipcode   The postal code for the location of the service request.    lat   latitude using the (WGS84) projection.    long   longitude using the (WGS84) projection.    media_url  Non-standard  A URL to media associated with the request, eg an image.    channel  Non-standard  Nested in extended_attributes field (extended_attributes.channel). Describes the method that the Service Request was input into the 311 system (i.e. phone, web).    ward  Non-standard  Nested in extended_attributes field (extended_attributes.ward). The political boundary where the Service Request is located.    police_district  Non-standard  Nested in extended_attributes field (extended_attributes.police_district). The police district boundary where the Service Request is located.    duplicate  Non-standard  Nested in extended_attributes field (extended_attributes.duplicate). Indicates that this Service Request is a duplicate of a Service Request that is already in the system. This can happen when, for example, the same pothole is reported multiple times. Use in conjuntion with extended_attributes.parent_service_request_id to identify duplicates and their assoicated 'master' (aka parent) Service Request records.    parent_service_request_id  Non-standard  Nested in extended_attributes field (extended_attributes.parent_service_request_id). When a Service Request is a duplicate, this value shows which Service Request (the parent) it is a duplicate of. Use in conjuntion with extended_attributes.duplicate to identify duplicates and their assoicated 'master' (aka parent) Service Request records.    notes  Non-standard  This fields holds nested and related status details, activities, follow-on case details, for the Service Request. Will generally have a Request Opened activity and a Request closed activity when the request is closed. May also hold other activity types (i.e. Dispatch Work Crew) and notes about Follow-on Service Requests (usually transfer of Service Request ownership from one department to another). Each actiivty in the array of 1 or more activities can have additional properties that are described below.    notes.summary  Non-standard  Short description of the activity / action described by the note.    notes.type  Non-standard  Category of the activity / action described by the note (i.e activity / opened / closed).    notes.description  Non-standard  More detailed description of the activity / action described by the note - usually comes directly from City systems so can be a bit cryptic.    notes.extended_attributes  Non-standard  For activities that are actual Follow-on (child) Service Requests, this field holds important information about those child service requests. Specifically, you will find service_name, agency_responsible, and service_request_id of the child SR.    notes.datetime  Non-standard  The human readable title of an option for singlevaluelist or multivaluelist. This is analogous to the innerhtml text node of an html option tag.", 
            "title": "Response Parameters"
        }, 
        {
            "location": "/service_requests/", 
            "text": "GET requests.:format\n\n\nQuery the current status of multiple requests. Because the Chicago endpoint may return service requests with no token and no service_reqeust_id in calls to GET service_requests while recently submitted SRs are still being processed by City systems, users of the GET service_requests method should ignore any service requests returned by the API until they have a service_request_id.\n\n\n\n\n\n\n\n\nResource Information\n\n\n\n\n\n\n\n\n\n\n\n\nMethod Name\n\n\nService Definition\n\n\n\n\n\n\nRequires API key?\n\n\nNo\n\n\n\n\n\n\nResponse Formats\n\n\nJSON, XML\n\n\n\n\n\n\nHTTP Methods\n\n\nGET\n\n\n\n\n\n\nJSONP\n\n\ncallback=?\n\n\n\n\n\n\n\n\nArguments\n\n\n\n\n\n\n\n\nArgument\n\n\nRequired\n\n\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\njurisdiction_id\n\n\noptional\n\n\n\n\nThis is currently optional on Chicago's Open311 endpoint.\n\n\n\n\n\n\nservice_request_id\n\n\noptional\n\n\n\n\nTo call multiple Service Requests at once, multiple service_request_id can be declared; comma delimited.\n\n\n\n\n\n\nservice_code\n\n\noptional\n\n\n\n\nSpecify the service type by calling the unique ID(s) of the service_codes you wish to query. This defaults to all service codes when not declared; can be declared multiple times, comma delimited (no spaces).\n\n\n\n\n\n\nstart_date\n\n\noptional\n\n\n\n\nEarliest datetime to include in search. When provided with end_date, allows one to search for requests which have a requested_datetime that matches a given range. Must use w3 format, eg 2010-01-01T00:00:00Z.\n\n\n\n\n\n\nend_date\n\n\noptional\n\n\n\n\nLatest datetime to include in search. When provided with start_date, allows one to search for requests which have a requested_datetime that matches a given range. Must use w3 format, eg 2010-01-01T00:00:00Z.\n\n\n\n\n\n\nstatus\n\n\noptional\n\n\n\n\nAllows for search of requests which have a specific status. This defaults to all statuses; can be declared multiple times, comma delimited (no spaces); Options: open, closed.\n\n\n\n\n\n\nextensions\n\n\noptional\n\n\nNon-standard\n\n\nThe Chicago Open311 endpoint provides supplemental details about Service Requests that are in addition to the ones described in the standard specification. These data are nested in the 'extended_attributes' field in the Service Request response. In order to retrieve the new supplemental details, add the query parameter \u201cextensions=true\u201d to any Open 311 api request.\n\n\n\n\n\n\npage_size\n\n\noptional\n\n\nNon-standard\n\n\nControls the maximum amount of results a single call will return. The default value is 50. The maximum value is 500.\n\n\n\n\n\n\npage\n\n\noptional\n\n\nNon-standard\n\n\nFor calls that logically include more records than the page size, the page parameter can be use to page through the results. Use in combination with page_size and with multiple calls to download all data in a logical set of records.\n\n\n\n\n\n\nupdated_before\n\n\noptional\n\n\nNon-standard\n\n\nTBD. This field is experimental and documentation is still being compiled\n\n\n\n\n\n\nupdated_after\n\n\noptional\n\n\nNon-standard\n\n\nTBD. This field is experimental and documentation is still being compiled.\n\n\n\n\n\n\nq\n\n\noptional\n\n\nNon-standard\n\n\nQuery: TBD. This field is experimental and documentation is still being compiled\n\n\n\n\n\n\n\n\nResponse Parameters\n\n\n\n\n\n\n\n\nArgument\n\n\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nservice_request_id\n\n\n\n\nThe unique ID of the service request created.\n\n\n\n\n\n\nservice_code\n\n\n\n\nReturns the service_code associated with the definition, the same one submitted for this call.\n\n\n\n\n\n\nstatus\n\n\nThe current status of the service request.\n\n\n\n\n\n\n\n\nstatus_notes\n\n\n\n\nExplanation of why status was changed to current state or more details on current status than conveyed with status alone.\n\n\n\n\n\n\nservice_name\n\n\n\n\nThe human readable name of the service request type.\n\n\n\n\n\n\nservice_code\n\n\n\n\nThe unique identifier for the service request type.\n\n\n\n\n\n\ndescription\n\n\n\n\nA full description of the request or report submitted.\n\n\n\n\n\n\nagency_responsible\n\n\n\n\nThe agency responsible for fulfilling or otherwise addressing the service request.\n\n\n\n\n\n\nservice_notice\n\n\nInformation about the action expected to fulfill the request or otherwise address the information reported.\n\n\n\n\n\n\n\n\nrequested_datetime\n\n\n\n\nThe date and time when the service request was made.\n\n\n\n\n\n\nupdated_datetime\n\n\nNon-standard\n\n\nTBD: The Chicago implementation uses updated_datetime in a manner that differs from Open311. Documentation is still being compiled.\n\n\n\n\n\n\nexpected_datetime\n\n\n\n\nThe date and time when the service request can be expected to be fulfilled. This may be based on a service-specific service level agreement.\n\n\n\n\n\n\naddress\n\n\n\n\nHuman readable address or description of location.\n\n\n\n\n\n\naddress_id\n\n\n\n\nThe internal address ID used by a jurisdictions master address repository or other addressing system.\n\n\n\n\n\n\nzipcode\n\n\n\n\nThe postal code for the location of the service request.\n\n\n\n\n\n\nlat\n\n\n\n\nlatitude using the (WGS84) projection.\n\n\n\n\n\n\nlong\n\n\n\n\nlongitude using the (WGS84) projection.\n\n\n\n\n\n\nmedia_url\n\n\nNon-standard\n\n\nA URL to media associated with the request, eg an image.\n\n\n\n\n\n\nchannel\n\n\nNon-standard\n\n\nNested in extended_attributes field (extended_attributes.channel). Describes the method that the Service Request was input into the 311 system (i.e. phone, web).\n\n\n\n\n\n\nward\n\n\nNon-standard\n\n\nNested in extended_attributes field (extended_attributes.ward). The political boundary where the Service Request is located.\n\n\n\n\n\n\npolice_district\n\n\nNon-standard\n\n\nNested in extended_attributes field (extended_attributes.police_district). The police district boundary where the Service Request is located.\n\n\n\n\n\n\nduplicate\n\n\nNon-standard\n\n\nNested in extended_attributes field (extended_attributes.duplicate). Indicates that this Service Request is a duplicate of a Service Request that is already in the system. This can happen when, for example, the same pothole is reported multiple times. Use in conjuntion with extended_attributes.parent_service_request_id to identify duplicates and their assoicated 'master' (aka parent) Service Request records.\n\n\n\n\n\n\nparent_service_request_id\n\n\nNon-standard\n\n\nNested in extended_attributes field (extended_attributes.parent_service_request_id). When a Service Request is a duplicate, this value shows which Service Request (the parent) it is a duplicate of. Use in conjuntion with extended_attributes.duplicate to identify duplicates and their assoicated 'master' (aka parent) Service Request records.\n\n\n\n\n\n\nnotes\n\n\nNon-standard\n\n\nThis fields holds nested and related status details, activities, follow-on case details, for the Service Request. Will generally have a Request Opened activity and a Request closed activity when the request is closed. May also hold other activity types (i.e. Dispatch Work Crew) and notes about Follow-on Service Requests (usually transfer of Service Request ownership from one department to another). Each actiivty in the array of 1 or more activities can have additional properties that are described below.\n\n\n\n\n\n\nnotes.summary\n\n\nNon-standard\n\n\nShort description of the activity / action described by the note.\n\n\n\n\n\n\nnotes.type\n\n\nNon-standard\n\n\nCategory of the activity / action described by the note (i.e activity / opened / closed).\n\n\n\n\n\n\nnotes.description\n\n\nNon-standard\n\n\nMore detailed description of the activity / action described by the note - usually comes directly from City systems so can be a bit cryptic.\n\n\n\n\n\n\nnotes.extended_attributes\n\n\nNon-standard\n\n\nFor activities that are actual Follow-on (child) Service Requests, this field holds important information about those child service requests. Specifically, you will find service_name, agency_responsible, and service_request_id of the child SR.\n\n\n\n\n\n\nnotes.datetime\n\n\nNon-standard\n\n\nThe human readable title of an option for singlevaluelist or multivaluelist. This is analogous to the innerhtml text node of an html option tag.", 
            "title": "service_requests"
        }, 
        {
            "location": "/service_requests/#get-requestsformat", 
            "text": "Query the current status of multiple requests. Because the Chicago endpoint may return service requests with no token and no service_reqeust_id in calls to GET service_requests while recently submitted SRs are still being processed by City systems, users of the GET service_requests method should ignore any service requests returned by the API until they have a service_request_id.     Resource Information       Method Name  Service Definition    Requires API key?  No    Response Formats  JSON, XML    HTTP Methods  GET    JSONP  callback=?", 
            "title": "GET requests.:format"
        }, 
        {
            "location": "/service_requests/#arguments", 
            "text": "Argument  Required   Description      jurisdiction_id  optional   This is currently optional on Chicago's Open311 endpoint.    service_request_id  optional   To call multiple Service Requests at once, multiple service_request_id can be declared; comma delimited.    service_code  optional   Specify the service type by calling the unique ID(s) of the service_codes you wish to query. This defaults to all service codes when not declared; can be declared multiple times, comma delimited (no spaces).    start_date  optional   Earliest datetime to include in search. When provided with end_date, allows one to search for requests which have a requested_datetime that matches a given range. Must use w3 format, eg 2010-01-01T00:00:00Z.    end_date  optional   Latest datetime to include in search. When provided with start_date, allows one to search for requests which have a requested_datetime that matches a given range. Must use w3 format, eg 2010-01-01T00:00:00Z.    status  optional   Allows for search of requests which have a specific status. This defaults to all statuses; can be declared multiple times, comma delimited (no spaces); Options: open, closed.    extensions  optional  Non-standard  The Chicago Open311 endpoint provides supplemental details about Service Requests that are in addition to the ones described in the standard specification. These data are nested in the 'extended_attributes' field in the Service Request response. In order to retrieve the new supplemental details, add the query parameter \u201cextensions=true\u201d to any Open 311 api request.    page_size  optional  Non-standard  Controls the maximum amount of results a single call will return. The default value is 50. The maximum value is 500.    page  optional  Non-standard  For calls that logically include more records than the page size, the page parameter can be use to page through the results. Use in combination with page_size and with multiple calls to download all data in a logical set of records.    updated_before  optional  Non-standard  TBD. This field is experimental and documentation is still being compiled    updated_after  optional  Non-standard  TBD. This field is experimental and documentation is still being compiled.    q  optional  Non-standard  Query: TBD. This field is experimental and documentation is still being compiled", 
            "title": "Arguments"
        }, 
        {
            "location": "/service_requests/#response-parameters", 
            "text": "Argument   Description      service_request_id   The unique ID of the service request created.    service_code   Returns the service_code associated with the definition, the same one submitted for this call.    status  The current status of the service request.     status_notes   Explanation of why status was changed to current state or more details on current status than conveyed with status alone.    service_name   The human readable name of the service request type.    service_code   The unique identifier for the service request type.    description   A full description of the request or report submitted.    agency_responsible   The agency responsible for fulfilling or otherwise addressing the service request.    service_notice  Information about the action expected to fulfill the request or otherwise address the information reported.     requested_datetime   The date and time when the service request was made.    updated_datetime  Non-standard  TBD: The Chicago implementation uses updated_datetime in a manner that differs from Open311. Documentation is still being compiled.    expected_datetime   The date and time when the service request can be expected to be fulfilled. This may be based on a service-specific service level agreement.    address   Human readable address or description of location.    address_id   The internal address ID used by a jurisdictions master address repository or other addressing system.    zipcode   The postal code for the location of the service request.    lat   latitude using the (WGS84) projection.    long   longitude using the (WGS84) projection.    media_url  Non-standard  A URL to media associated with the request, eg an image.    channel  Non-standard  Nested in extended_attributes field (extended_attributes.channel). Describes the method that the Service Request was input into the 311 system (i.e. phone, web).    ward  Non-standard  Nested in extended_attributes field (extended_attributes.ward). The political boundary where the Service Request is located.    police_district  Non-standard  Nested in extended_attributes field (extended_attributes.police_district). The police district boundary where the Service Request is located.    duplicate  Non-standard  Nested in extended_attributes field (extended_attributes.duplicate). Indicates that this Service Request is a duplicate of a Service Request that is already in the system. This can happen when, for example, the same pothole is reported multiple times. Use in conjuntion with extended_attributes.parent_service_request_id to identify duplicates and their assoicated 'master' (aka parent) Service Request records.    parent_service_request_id  Non-standard  Nested in extended_attributes field (extended_attributes.parent_service_request_id). When a Service Request is a duplicate, this value shows which Service Request (the parent) it is a duplicate of. Use in conjuntion with extended_attributes.duplicate to identify duplicates and their assoicated 'master' (aka parent) Service Request records.    notes  Non-standard  This fields holds nested and related status details, activities, follow-on case details, for the Service Request. Will generally have a Request Opened activity and a Request closed activity when the request is closed. May also hold other activity types (i.e. Dispatch Work Crew) and notes about Follow-on Service Requests (usually transfer of Service Request ownership from one department to another). Each actiivty in the array of 1 or more activities can have additional properties that are described below.    notes.summary  Non-standard  Short description of the activity / action described by the note.    notes.type  Non-standard  Category of the activity / action described by the note (i.e activity / opened / closed).    notes.description  Non-standard  More detailed description of the activity / action described by the note - usually comes directly from City systems so can be a bit cryptic.    notes.extended_attributes  Non-standard  For activities that are actual Follow-on (child) Service Requests, this field holds important information about those child service requests. Specifically, you will find service_name, agency_responsible, and service_request_id of the child SR.    notes.datetime  Non-standard  The human readable title of an option for singlevaluelist or multivaluelist. This is analogous to the innerhtml text node of an html option tag.", 
            "title": "Response Parameters"
        }, 
        {
            "location": "/post_service_request/", 
            "text": "POST requests.:format\n\n\nCreate a service request in the City's database. Once a service request has been processed by the City (this can take an undetermined amount of time), you should be able to call the GET service_request_id method (tokens/:token_id.:format) to get back the service_request_id for a SR. Therefore, it is nesseary to poll the GET service_request_id method until an SR id is returned. Because the Chicago endpoint may return service requests with no token and no service_reqeust_id in calls to GET service_requests while recently submitted SRs are still being processed by City systems, users of the GET service_requests method should ignore any service requests returned by the API until they have a service_request_id.\n\n\n\n\n\n\n\n\nResource Information\n\n\n\n\n\n\n\n\n\n\n\n\nMethod Name\n\n\nPost Service Request\n\n\n\n\n\n\nRequires API key?\n\n\nNo\n\n\n\n\n\n\nResponse Formats\n\n\nJSON, XML\n\n\n\n\n\n\nHTTP Methods\n\n\nGET\n\n\n\n\n\n\nJSONP\n\n\nPOST\n\n\n\n\n\n\n\n\nArguments\n\n\n\n\n\n\n\n\nArgument\n\n\nRequired\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\njurisdiction_id\n\n\noptional\n\n\nThis is currently optional on Chicago's Open311 endpoint.\n\n\n\n\n\n\nservice_code\n\n\nrequired\n\n\nThis is obtained from GET Service List method.\n\n\n\n\n\n\nattribute\n\n\nrequired\n\n\nThis takes the form of attribute[code]=value where multiple code/value pairs can be specified as well as multiple values for the same code in the case of a multivaluelist datatype (attribute[code1][]=value1\nattribute[code1][]=value2\nattribute[code1][]=value3) - see example. - This is only required if the service_code requires a service definition with required fields.\n\n\n\n\n\n\nlat\n\n\nrequired\n\n\nlat \n long both need to be sent even though they are sent as two separate parameters. lat \n long are required.\n\n\n\n\n\n\nlong\n\n\nrequired\n\n\nlat \n long both need to be sent even though they are sent as two separate parameters. lat \n long are required.\n\n\n\n\n\n\naddress_string\n\n\nrequired\n\n\nThis should be written from most specific to most general geographic unit, eg address number or cross streets, street name, neighborhood/district, city/town/village, county, postal code.\n\n\n\n\n\n\naddress_id\n\n\noptional\n\n\nThe internal address ID used by a jurisdiction's master address repository or other addressing system.\n\n\n\n\n\n\nemail\n\n\noptional\n\n\nThe email address of the person submitting the request.\n\n\n\n\n\n\ndevice_id\n\n\noptional\n\n\nThe unique device ID of the device submitting the request. This is usually only used for mobile devices.\n\n\n\n\n\n\naccount_id\n\n\noptional\n\n\nThe unique ID for the user account of the person submitting the request.\n\n\n\n\n\n\nfirst_name\n\n\noptional\n\n\nThe given name of the person submitting the request.\n\n\n\n\n\n\nlast_name\n\n\noptional\n\n\nThe family name of the person submitting the request.\n\n\n\n\n\n\nphone\n\n\noptional\n\n\nThe phone number of the person submitting the request.\n\n\n\n\n\n\ndescription\n\n\noptional\n\n\nA full description of the request or report being submitted.\n\n\n\n\n\n\nmedia_url\n\n\noptional\n\n\nA URL to media associated with the request, eg an image.\n\n\n\n\n\n\n\n\nResponse Parameters\n\n\n\n\n\n\n\n\nArgument\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\ntoken\n\n\nIf returned, use this to call GET service_request_id from a token to discover what the service_request_id is after it is created by the City system.", 
            "title": "post_service_request"
        }, 
        {
            "location": "/post_service_request/#post-requestsformat", 
            "text": "Create a service request in the City's database. Once a service request has been processed by the City (this can take an undetermined amount of time), you should be able to call the GET service_request_id method (tokens/:token_id.:format) to get back the service_request_id for a SR. Therefore, it is nesseary to poll the GET service_request_id method until an SR id is returned. Because the Chicago endpoint may return service requests with no token and no service_reqeust_id in calls to GET service_requests while recently submitted SRs are still being processed by City systems, users of the GET service_requests method should ignore any service requests returned by the API until they have a service_request_id.     Resource Information       Method Name  Post Service Request    Requires API key?  No    Response Formats  JSON, XML    HTTP Methods  GET    JSONP  POST", 
            "title": "POST requests.:format"
        }, 
        {
            "location": "/post_service_request/#arguments", 
            "text": "Argument  Required  Description      jurisdiction_id  optional  This is currently optional on Chicago's Open311 endpoint.    service_code  required  This is obtained from GET Service List method.    attribute  required  This takes the form of attribute[code]=value where multiple code/value pairs can be specified as well as multiple values for the same code in the case of a multivaluelist datatype (attribute[code1][]=value1 attribute[code1][]=value2 attribute[code1][]=value3) - see example. - This is only required if the service_code requires a service definition with required fields.    lat  required  lat   long both need to be sent even though they are sent as two separate parameters. lat   long are required.    long  required  lat   long both need to be sent even though they are sent as two separate parameters. lat   long are required.    address_string  required  This should be written from most specific to most general geographic unit, eg address number or cross streets, street name, neighborhood/district, city/town/village, county, postal code.    address_id  optional  The internal address ID used by a jurisdiction's master address repository or other addressing system.    email  optional  The email address of the person submitting the request.    device_id  optional  The unique device ID of the device submitting the request. This is usually only used for mobile devices.    account_id  optional  The unique ID for the user account of the person submitting the request.    first_name  optional  The given name of the person submitting the request.    last_name  optional  The family name of the person submitting the request.    phone  optional  The phone number of the person submitting the request.    description  optional  A full description of the request or report being submitted.    media_url  optional  A URL to media associated with the request, eg an image.", 
            "title": "Arguments"
        }, 
        {
            "location": "/post_service_request/#response-parameters", 
            "text": "Argument  Description      token  If returned, use this to call GET service_request_id from a token to discover what the service_request_id is after it is created by the City system.", 
            "title": "Response Parameters"
        }
    ]
}